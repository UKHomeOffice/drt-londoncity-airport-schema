package com.airport2020.requestaidx;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2020-07-02T16:15:14.517+01:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "RequestFlightService",
                  wsdlLocation = "file:/Users/nilesh/HO_DRT/drt-londoncity-airport-schema/src/main/resources/RequestFlightServiceSingle.wsdl",
                  targetNamespace = "http://www.airport2020.com/RequestAIDX/")
public class RequestFlightService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.airport2020.com/RequestAIDX/", "RequestFlightService");
    public final static QName BasicHttpsBindingIRequestFlightService = new QName("http://www.airport2020.com/RequestAIDX/", "BasicHttpsBinding_IRequestFlightService");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/nilesh/HO_DRT/drt-londoncity-airport-schema/src/main/resources/RequestFlightServiceSingle.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RequestFlightService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/nilesh/HO_DRT/drt-londoncity-airport-schema/src/main/resources/RequestFlightServiceSingle.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RequestFlightService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RequestFlightService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RequestFlightService() {
        super(WSDL_LOCATION, SERVICE);
    }





    /**
     *
     * @return
     *     returns IRequestFlightService
     */
    @WebEndpoint(name = "BasicHttpsBinding_IRequestFlightService")
    public IRequestFlightService getBasicHttpsBindingIRequestFlightService() {
        return super.getPort(BasicHttpsBindingIRequestFlightService, IRequestFlightService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IRequestFlightService
     */
    @WebEndpoint(name = "BasicHttpsBinding_IRequestFlightService")
    public IRequestFlightService getBasicHttpsBindingIRequestFlightService(WebServiceFeature... features) {
        return super.getPort(BasicHttpsBindingIRequestFlightService, IRequestFlightService.class, features);
    }

}
